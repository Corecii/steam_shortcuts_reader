var searchIndex = {};
searchIndex["steam_vdf"] = {"doc":"`steam_vdf` is used to read certain vdf files that follow the format of `shortcuts.vdf`","items":[[4,"ValveDataType","steam_vdf","Represents a data type in a vdf file without data.",null,null],[13,"List","","",0,null],[13,"String","","",0,null],[13,"Bytes4","","",0,null],[13,"EndOfList","","",0,null],[4,"ValveData","","Represents data in a vdf file. All data except the list terminator has a property name and property value.",null,null],[13,"List","","A list. Begins with `0x00`, ends with `EndOfList`, or `0x08` Internal format: `0x00` `string name` `list_contents` `EndOfList`",1,null],[13,"String","","A string. Begins with `0x01`. All standalone strings end with `0x00`. The string ValveData is simply two strings. Internal format: `0x01` `string name` `string value`",1,null],[13,"Bytes4","","4 bytes. Begins with `0x02`. Internal format: `0x02` `string name` `4 bytes`",1,null],[13,"EndOfList","","Only considered a type for the use of parsing lists. This is always the last element in the list. Begins with `0x08`. Internal format: `0x08`",1,null],[5,"get_prefix_from_type","","Returns the prefix for a specific data type",null,{"inputs":[{"name":"valvedatatype"}],"output":{"name":"u8"}}],[5,"get_type_from_prefix","","Returns the data type for a specific prefix. If the prefix byte is not valid, `None` is returned.",null,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[5,"read_null_string","","Reads a String, counting up all characters until it reaches `0x00` i.e. null. Returns an `OsString`, but internally uses a `String` and `String::from_utf8_lossy`.",null,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[5,"read_data","","Reads the provided input, and returns a `ValveData` representing it. Generally, this will be a `ValveData::List`. If the prefix for this data is invalid, then `Ok(None)` is returned. If the prefix is valid and no errors were encountered while reading, then `Ok(Some(ValveData))` is returned. If errors were encountered while reading, then `Err` is returned with an io error. This does not read the `0x08` at the end of `shortcuts.vdf`.",null,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[5,"write_null_string","","Writes a String, then writes 0x00. Takes an `OsStr`, but internally uses a `String` and `OsStr::to_string_lossy`.",null,{"inputs":[{"name":"t"},{"name":"osstr"}],"output":{"name":"result"}}],[5,"write_data","","Writes to the given output the given ValveData. * If it succeeds without errors, it returns `Ok(())` * If it has errors, it returns `Err` with an io error.",null,{"inputs":[{"name":"t"},{"name":"valvedata"}],"output":{"name":"result"}}],[11,"data_type","","Convert from data to type.",1,{"inputs":[{"name":"self"}],"output":{"name":"valvedatatype"}}]],"paths":[[4,"ValveDataType"],[4,"ValveData"]]};
initSearch(searchIndex);
